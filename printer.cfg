
# This file contains pin mappings for the Creality "v4.2.7" board. To
# use this config, during "make menuconfig" select the STM32F103 with
# a "28KiB bootloader" and serial (on USART1 PA10/PA9) communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

# Pause/Resume functionality with support of position capture and restore


[include macros.cfg]
[include mainsail.cfg]

[force_move]

#[probe]
#pin: ^PA7
#x_offset: 49.5
#y_offset: 0
#z_offset: 1
#speed: 18

[stepper_z]
step_pin: PB5
dir_pin: !PB6
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
#endstop_pin: ^PA7
#position_endstop: 0.0
#position_min: -.8
position_max: 250
position_min: -3 # The Z carriage may need to travel below the Z=0
endstop_pin: probe:z_virtual_endstop


[safe_z_home]
home_xy_position: 117.5,117.5 # Change coordinates to the center of your print bed
speed: 200
z_hop: 10                 # Move up 10mm
z_hop_speed: 60

[probe]
pin: ^!PA7
x_offset: 51
y_offset: 2
#z_offset: 1.2

[bed_mesh]
speed: 200
horizontal_move_z: 5
mesh_min: 00,17
mesh_max: 116.5,227.5
probe_count: 5,5
algorithm: bicubic



[input_shaper]
shaper_freq_x: 39
shaper_type_x: 2hump_ei 
shaper_freq_y: 43
shaper_type_y: mzv

[printer]
kinematics: cartesian
max_velocity: 300     #default 300
max_accel: 3500       #default 3000
max_z_velocity: 5
max_z_accel: 100

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    113,120,20  # Bed Center

    
[pause_resume]
recover_velocity: 50
#recover_velocity: 200
# When capture/restore is enabled, the speed at which to return to
# the captured position (in mm/s). Default is 50.0 mm/s. 
# paste "unknownCommandsNeedAck: true" in ~/.octoprint/config.yaml
######################################
# #
# serial: #
# additionalPorts: #
# - /tmp/printer #
# baudrate: 250000 #
# disconnectOnErrors: false #
# logPositionOnCancel: true #
# port: /tmp/printer #
# unknownCommandsNeedAck: true #
# #
######################################
# Filament Switch Sensor. Support for filament insert and runout detection
# using a switch sensor, such as an endstop switch.
[filament_switch_sensor filament_sensor]
pause_on_runout: False
event_delay: 0.5
# The minimum amount of time in seconds to delay between events.
# Events triggered during this time period will be silently
# ignored. The default is 3 seconds.
switch_pin: !PA4 # ar2=RAMPS X+ / ar4=RAMPS Servo Pin 4
# The pin on which the switch is connected. This parameter must be
# provided.
# When set to True, a PAUSE will execute immediately after a runout
# is detected. Note that if pause_on_runout is False and the
# runout_gcode is omitted then runout detection is disabled. Default
# is True.
runout_gcode:
    M600


# The gcode to run after a filament runout is detected. If
# pause_on_runout is set to True this gcode will run after the PAUSE
# is complete. The default is not to run any gcode commands.
#insert_gcode: RESUME_MACRO
#event_delay: 


# The gcode to run after a filament insert is detected. The default
# is not to run any gcode commands, which disables insert detection.

# Idle timeout. An idle timeout is automatically enabled - add an
# explicit idle_timeout config section to change the default settings.
[idle_timeout]
#gcode:
# A list of G-Code commands (one per line; subsequent lines
# indented) to execute on an idle timeout. The default is to run
# "TURN_OFF_HEATERS" and "M84".
#timeout: 600
timeout: 1200
# Idle time (in seconds) to wait before running the above G-Code
# commands. The default is 600 second

[stepper_x]
step_pin: PB9
dir_pin: PC2
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 0
position_max: 235
homing_speed: 80

[stepper_y]
step_pin: PB7
dir_pin: PB8
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 0
position_max: 235
homing_speed: 80



[extruder]
max_extrude_only_distance: 100.0
max_extrude_cross_section: 3
step_pin: PB3
dir_pin: PB4
enable_pin: !PC3
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC5
#control: pid
#pid_Kp: 25.679
#pid_Ki: 1.600
#pid_Kd: 103.035
min_temp: 0
max_temp: 300
gear_ratio: 50:17
rotation_distance: 22.81662
pressure_advance = 0.085 #Try 0.085

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command



[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

[display_glyph feedrate]
data:
  ................
  ................
  ................
  ......******....
  ....**********..
  ...****....****.
  ..***........**.
  .***..........*.
  .**..*..........
  ***...*.........
  **.....*........
  **......**......
  **......***.....
  **.......**.....
  ................
  ................

[virtual_sdcard]
path: ~/gcode_files

[display_status]




[bed_screws]
screw1: 28,26
screw2: 28,200
screw3: 210, 120


#[output_pin beeper]
#pin: EXP1_1

[board_pins]
aliases:
  EXP1_1=PC6,EXP1_3=PB10,EXP1_5=PB14,EXP1_7=PB12,EXP1_9=<GND>,
  EXP1_2=PB2,EXP1_4=PB11,EXP1_6=PB13,EXP1_8=PB15,EXP1_10=<5V>,
  PROBE_IN=PB0,PROBE_OUT=PB1,FIL_RUNOUT=PA4



[output_pin BEEPER_Pin]
pin: PC6
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[menu __main __octoprint]
type: disabled





####menu Bed Level Menu####
[menu __main __bedlevel]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Bed Level

[menu __main __bedlevel __adjustscrews]
type: command
name: Adjust Screws
gcode:
	G28
	bed_screws_adjust

[menu __main __bedlevel __accept]
type: command
name: accept
gcode:
	ACCEPT
	
[menu __main __bedlevel __adjusted]
type: command
name: adjusted
gcode:
	ADJUSTED
	
[menu __main __bedlevel __abort]
type: command
name: abort
gcode:
	ABORT

#[neopixel my_neopixel]
#pin:host:GPIO18
#   The pin connected to the neopixel. This parameter must be
#   provided.
#chain_count:16
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
#color_order: RGB
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
#initial_RED: 1.0
#initial_GREEN: 1.0
#initial_BLUE: 1.0
#initial_WHITE: 0.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 70.672
#*# pid_ki = 1.056
#*# pid_kd = 1181.996
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 19.063
#*# pid_ki = 1.125
#*# pid_kd = 80.778
#*#
#*# [probe]
#*# z_offset = 0.715
#*#
#*# [bed_mesh Ender3Pro]
#*# version = 1
#*# points =
#*# 	  0.007500, 0.032500, 0.022500, 0.000000, -0.032500
#*# 	  -0.005000, 0.000000, -0.015000, -0.030000, -0.087500
#*# 	  -0.062500, -0.047500, -0.057500, -0.080000, -0.137500
#*# 	  -0.122500, -0.130000, -0.145000, -0.172500, -0.232500
#*# 	  -0.195000, -0.182500, -0.195000, -0.222500, -0.245000
#*# tension = 0.2
#*# min_x = 0.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 17.0
#*# x_count = 5
#*# max_y = 227.47
#*# mesh_x_pps = 2
#*# max_x = 116.47
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.007500, 0.032500, 0.022500, 0.000000, -0.032500
#*# 	  -0.005000, 0.000000, -0.015000, -0.030000, -0.087500
#*# 	  -0.062500, -0.047500, -0.057500, -0.080000, -0.137500
#*# 	  -0.122500, -0.130000, -0.145000, -0.172500, -0.232500
#*# 	  -0.195000, -0.182500, -0.195000, -0.222500, -0.245000
#*# tension = 0.2
#*# min_x = 0.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 17.0
#*# x_count = 5
#*# max_y = 227.47
#*# mesh_x_pps = 2
#*# max_x = 116.47
